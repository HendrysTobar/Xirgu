<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAC4AGIDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDirfWtQ0lle3mkRe69VP1XpW9a+NbS5wt8hhlIwZI/mQ/h1H61
        yTZkQxsxVgMD0rMeNo25zXMoK9z03XnFWWx7Harb3NuJ4Zknjb+KNsj8fSpdyxqQAQK8as9QuLKXzba4
        lhkH8UZwKv8A/CS6uynfq10D1+V8fyrKdKcnvodVHG0orWOp6ozs3Tp7UzY5PG+uL0fS/FuvQxXC395b
        WbAMs9xKf3g6ZVR1HX8q0L7w4I4tr6tqMjr1LT8E/TH9axVHW1ztji3KPMoffodESU5aQKB3ZgKzL3xJ
        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
        NWif+B8X/wAVRRRQB//Z
</value>
  </data>
</root>